name: Build and Push release image
on:
  release:
    types:
      - published

env:
  ECR_REPOSITORY: ddc-smart-contract
jobs:
  build-and-push:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push release image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}

  trigger:
    needs: build-and-push
    if: ${{ success() }}
    strategy:
      matrix:
        repo: [ 'Cerebellum-Network/pos-network-node' ]
    runs-on: ubuntu-latest
    steps:
      - name: Get the current short branch name (VERSION)
        shell: bash
        run: echo "::set-output name=VERSION::${GITHUB_REF##*/}"
        id: get-version
      - name: Trigger Cerebellum-Network/pos-network-node and Cerebellum-Network/ddc-e2e-tests repositories
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.TRIGGER_GITHUB_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: DDC_SMART_CONTRACT_VERSION_TRIGGER
          client-payload: '{"DDC_SMART_CONTRACT_VERSION": "${{ steps.get-version.outputs.VERSION }}"}'
